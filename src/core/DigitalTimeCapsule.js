import JSZip from 'jszip';
import { logger } from '../logger.js';
import { ArchiveValidator } from './ArchiveValidator.js';
import { ArchiveRenderer } from './ArchiveRenderer.js';
import { ArchiveNavigation } from './ArchiveNavigation.js';
import { ThemeManager } from './ThemeManager.js';
import { UrlManager } from './UrlManager.js';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–∞–ø—Å—É–ª–æ–π –≤—Ä–µ–º–µ–Ω–∏
 */
export class DigitalTimeCapsule {
    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä DigitalTimeCapsule
     */
    constructor() {
        this.zip = null;
        this.logger = logger;
        this.logger.info('DigitalTimeCapsule –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', {
            userAgent: navigator.userAgent,
            timestamp: new Date().toISOString()
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
        this.validator = new ArchiveValidator(this);
        this.renderer = new ArchiveRenderer(this);
        this.navigation = new ArchiveNavigation(this);
        this.themeManager = new ThemeManager(this);
        this.urlManager = new UrlManager(this);
        
        this.initializeEventListeners();
        this.themeManager.initializeTheme();
        this.clearGlobalStatus(); // –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
     */
    initializeEventListeners() {
        const operationId = this.logger.pushOperation('initializeEventListeners');
        try {
            const uploadInput = document.getElementById('zipUpload');
            const themeToggle = document.getElementById('theme-toggle');
            
            if (uploadInput) {
                uploadInput.addEventListener('change', (event) => {
                    this.logger.trackUserAction('file_selected', { 
                        fileName: event.target.files[0]?.name,
                        fileSize: event.target.files[0]?.size
                    });
                    this.handleZipUpload(event)
                        .catch(error => this.showError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`));
                });
                this.logger.debug('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω');
            }

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
            if (themeToggle) {
                themeToggle.addEventListener('click', () => {
                    this.themeManager.toggleTheme();
                });
                this.logger.debug('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –¥–æ–±–∞–≤–ª–µ–Ω');
            }

            // –û—á–∏—Å—Ç–∫–∞ URL –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            window.addEventListener('beforeunload', () => {
                this.urlManager.cleanupUrls();
            });

            // –û—á–∏—Å—Ç–∫–∞ URL –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            window.addEventListener('pagehide', () => {
                this.urlManager.cleanupUrls();
            });

            this.logger.info('–°–æ–±—ã—Ç–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ', { operationId });
        } catch (error) {
            this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π', { error: error.message, operationId });
            throw error;
        } finally {
            this.logger.popOperation();
        }
    }

    /**
     * –ü–∞—Ä—Å–µ—Ä –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ —Å–±–æ—Ä–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–∞—Ö
     * @param {string} text - –¢–µ–∫—Å—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
     * @returns {{items: ArchiveItem[], errors: ValidationError[]}} - –û–±—ä–µ–∫—Ç —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ –æ—à–∏–±–∫–∞–º–∏
     */
    parseManifest(text) {
        return this.validator.parseManifest(text);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤–∞
     * @param {Array} items - –≠–ª–µ–º–µ–Ω—Ç—ã –∞—Ä—Ö–∏–≤–∞
     */
    validateArchive(items) {
        return this.validator.validateArchive(items);
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
     * @returns {Promise<void>}
     */
    async renderArchive() {
        return this.renderer.renderArchive();
    }

    /**
     * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞—Ä—Ö–∏–≤–µ
     * @param {Array} items - –≠–ª–µ–º–µ–Ω—Ç—ã –∞—Ä—Ö–∏–≤–∞
     */
    async populateSidebar(items) {
        return this.navigation.populateSidebar(items);
    }

    /**
     * –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è –º–µ–º–∞
     * @param {string} memFilename - –ò–º—è —Ñ–∞–π–ª–∞ –º–µ–º–∞
     * @returns {Object|null} - –§–∞–π–ª –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∏–ª–∏ null
     */
    findExplanationFile(memFilename) {
        return this.navigation.findExplanationFile(memFilename);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ ID –¥–ª—è HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     * @param {string} filename - –ò–º—è —Ñ–∞–π–ª–∞
     * @returns {string} - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π ID
     */
    generateSafeId(filename) {
        return this.navigation.generateSafeId(filename);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {string} type - –¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞
     * @returns {string} - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç–º–æ–¥–∑–∏
     */
    getItemEmoji(type) {
        const typeMap = {
            '–ù–û–í–û–°–¢–¨': 'üì∞',
            '–ú–ï–î–ò–ê': 'üé¨',
            '–ú–ï–ú': 'üòÇ',
            '–§–û–¢–û': 'üì∏',
            '–í–ò–î–ï–û': 'üé•',
            '–ê–£–î–ò–û': 'üéµ',
            '–î–û–ö–£–ú–ï–ù–¢': 'üìÑ',
            '–¢–ï–ö–°–¢': 'üìù',
            '–ö–ê–†–¢–ò–ù–ö–ê': 'üñºÔ∏è',
            '–°–´–õ–ö–ê': 'üîó',
            '–°–û–ë–´–¢–ò–ï': 'üìÖ',
            '–õ–ò–ß–ù–û–ï': 'üë§',
            '–û–ë–£–ß–ï–ù–ò–ï': 'üìö',
            '–†–ê–ë–û–¢–ê': 'üíº',
            '–•–û–ë–ë–ò': 'üé®'
        };
        return typeMap[type.toUpperCase()] || 'üìÅ';
    }

    /**
     * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showError(message) {
        this.updateGlobalStatus(message, 'error');
        this.logger.error(message);
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
     */
    clearGlobalStatus() {
        const globalUploadStatus = document.getElementById('global-upload-status');
        if (globalUploadStatus) {
            globalUploadStatus.textContent = '';
            globalUploadStatus.className = 'upload-status';
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å hidden –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            globalUploadStatus.style.display = 'none';
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {'info'|'success'|'error'} statusType - –¢–∏–ø —Å—Ç–∞—Ç—É—Å–∞
     */
    updateGlobalStatus(message, statusType = 'info') {
        const globalUploadStatus = document.getElementById('global-upload-status');
        if (globalUploadStatus) {
            globalUploadStatus.textContent = message;
            globalUploadStatus.className = `upload-status ${statusType}`;
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            globalUploadStatus.style.display = message ? 'block' : 'none';
        }
    }

    /**
     * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
     * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
     * @returns {string} - –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
     */
    escapeHtml(text) {
        if (typeof text !== 'string') return '';
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ URL –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
     */
    cleanupUrls() {
        this.urlManager.cleanupUrls();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP —Ñ–∞–π–ª–∞
     * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
     * @returns {Promise<void>}
     */
    async handleZipUpload(event) {
        const operationId = this.logger.pushOperation('handleZipUpload');
        try {
            const file = event.target.files[0];
            if (!file) {
                this.logger.warn('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω', { operationId });
                return;
            }

            this.logger.info('–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP —Ñ–∞–π–ª–∞', { 
                fileName: file.name, 
                fileSize: file.size, 
                operationId 
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            this.updateGlobalStatus('–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞...', 'info');

            // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ ArrayBuffer
            const arrayBuffer = await file.arrayBuffer();
            this.logger.debug('ZIP —Ñ–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω –≤ ArrayBuffer', { size: arrayBuffer.byteLength, operationId });

            // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä JSZip
            this.zip = new JSZip();
            this.logger.debug('–ù–∞—á–∞–ª–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ ZIP –∞—Ä—Ö–∏–≤–∞', { operationId });

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤
            await this.zip.loadAsync(arrayBuffer);
            this.logger.info('ZIP –∞—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω', { operationId });

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
            const manifestFile = this.zip.file('manifest.txt');
            if (!manifestFile) {
                const error = new Error('–§–∞–π–ª manifest.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ');
                this.logger.error('–ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', { error: error.message, operationId });
                throw error;
            }

            this.logger.debug('–§–∞–π–ª –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –Ω–∞–π–¥–µ–Ω', { operationId });

            // –ß–∏—Ç–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º –º–∞–Ω–∏—Ñ–µ—Å—Ç
            const manifestText = await manifestFile.async('text');
            this.logger.debug('–ú–∞–Ω–∏—Ñ–µ—Å—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω', { manifestLength: manifestText.length, operationId });

            const { items, errors } = this.parseManifest(manifestText);
            this.logger.info('–ú–∞–Ω–∏—Ñ–µ—Å—Ç —Ä–∞–∑–æ–±—Ä–∞–Ω', { itemsCount: items.length, errorsCount: errors.length, operationId });

            // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            if (errors.length > 0) {
                this.logger.warn('–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ', { errorsCount: errors.length, operationId });
                // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ renderArchive
            }

            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞—Ä—Ö–∏–≤–∞
            const archiveContainer = document.getElementById('archive-container');
            if (archiveContainer) {
                archiveContainer.innerHTML = '';
            }

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞—Ä—Ö–∏–≤
            await this.renderArchive();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.updateGlobalStatus(`–ê—Ä—Ö–∏–≤ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ: ${items.length} —Ñ–∞–π–ª–æ–≤`, 'success');
            this.logger.info('ZIP —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω', { itemsCount: items.length, operationId });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –∞—Ä—Ö–∏–≤–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            const archiveSection = document.getElementById('archive-section');
            const validationSection = document.getElementById('validation-section');
            if (archiveSection) archiveSection.hidden = false;
            if (validationSection) validationSection.hidden = false;

        } catch (error) {
            this.logger.logError(error, { operationId });
            const errorMessage = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ä—Ö–∏–≤–∞: ${error.message}`;
            this.showError(errorMessage);
            throw error;
        } finally {
            this.logger.popOperation();
        }
    }
}
